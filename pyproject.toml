[tool.poetry]
name = "aleph-alpha-client"
version = "7.5.0"
description = "python client to interact with Aleph Alpha api endpoints"
authors = ["Aleph Alpha <support@aleph-alpha.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/Aleph-Alpha/aleph-alpha-client"
packages = [
    { include = "aleph_alpha_client" },
]

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
requests = ">=2.28"
urllib3 = ">=1.26"
aiohttp = ">=3.10.2"
aiodns = ">=3.2.0"
aiohttp-retry = ">=2.8.3"
tokenizers = ">=0.13.2"
typing-extensions = ">=4.5.0"
Pillow = ">=9.2.0"
tqdm = ">=4.62.0"
python-liquid = ">=1.9.4"
packaging = ">=23.2"
pytest = { version = "*", optional = true }
pytest-cov = { version = "*", optional = true }
pytest-dotenv = { version = "*", optional = true }
pytest-httpserver = { version = "*", optional = true }
pytest-aiohttp = { version = "*", optional = true }
mypy = { version = "*", optional = true }
types-requests = { version = "*", optional = true }
types-Pillow = { version = "*", optional = true }
types-tqdm = { version = "*", optional = true }
nbconvert = { version = "*", optional = true }
ipykernel = { version = "*", optional = true }
black = { version = "*", optional = true }
sphinx = { version = "*", optional = true }
sphinx_rtd_theme = { version = "*", optional = true }

[tool.poetry.extras]
test = ["pytest", "pytest-cov", "pytest-dotenv", "pytest-httpserver", "pytest-aiohttp"]
types = ["mypy", "types-requests", "types-Pillow", "types-tqdm"]
dev = ["pytest", "pytest-cov", "pytest-dotenv", "pytest-httpserver", "pytest-aiohttp", "mypy", "types-request", "types-Pillow", "types-tqdm", "nbconvert", "ipykernel", "black"]
docs = ["sphinx", "sphinx_rtd_theme"]

[tool.pytest.ini_options]
markers = [
    "system_test: Marks a test that runs as a system test of AlephAlpha API"
]
asyncio_mode = "auto"

[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
build-backend = "setuptools.build_meta"